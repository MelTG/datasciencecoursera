## Functions that cache the inverse of a matrix

## Creates a special matrix that cache its inverse

makeCacheMatrix <- function( x = matrix() ) {

    n <- NULL
    set <- function( matrix ) {
            x <<- matrix
            n <<- NULL
    }

    get <- function() {
        ## Return the matrix
        x
    }

    setInverse <- function(inverse) {
        n <<- inverse
    }

    getInverse <- function() {
        ## Return the inverse property
        n
    }

    list(set = set, get = get,
         setInverse = setInverse,
         getInverse = getInverse)
}


## Function that cache the inverse of the special matrix

cacheSolve <- function(x, ...) {

    m <- x$getInverse()

 
    if( !is.null(m) ) {
            message("getting cached data")
            return(m)
    }

    data <- x$get()

    m <- solve(data) %*% data

    x$setInverse(m)

    m
}
